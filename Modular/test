RuleFor(x => x.Security)
    .CustomAsync(async (security, context, _) =>
    {
        if (security is null)
        {
            context.AddFailure(new ValidationFailure(
                propertyName: "Security.DynamicKey_" + DateTime.Now.Ticks,
                error: "Security object is required."
            ));
            return;
        }

        // Example logic to fetch something and use it in field name
        var propertyName = security.IdentifierType switch
        {
            "CUSIP" => "Security.CUSIP",
            "ISIN"  => "Security.ISIN",
            _       => "Security.UnknownId"
        };

        context.AddFailure(new ValidationFailure(
            propertyName,
            "Security ID is invalid for the given type."
        ));
    });