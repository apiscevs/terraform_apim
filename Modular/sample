public async Task ProcessNewBlobNotificationAsync(string blobName, FileMetaData fileMetaData, AtomSbRenewMessageLockDelegate messageLockRenewer)
{
    var dbg = _config.GetSection("DebugIngest");
    if (dbg.GetValue<bool>("UseLocalFile"))
    {
        var localPath  = dbg.GetValue<string>("Path")!;
        var localName  = dbg.GetValue<string>("FileName") ?? Path.GetFileName(localPath);

        await using var fs = new FileStream(
            localPath,
            FileMode.Open,
            FileAccess.Read,
            FileShare.Read,
            bufferSize: 64 * 1024,
            options: FileOptions.Asynchronous | FileOptions.SequentialScan);

        // keep everything else the same
        _logger.LogInformation("DEBUG: processing local file {File}", localPath);
        await ProcessBlobAsync(fs, localName, fileMetaData, messageLockRenewer, blobContainerClient: null);
        return; // skip cloud delete, etc.
    }

    // normal cloud path
    var response = await blobClient.DownloadStreamingAsync();
    await ProcessBlobAsync(response.Value.Content, fileMetaData.UploadedFileName!, fileMetaData, messageLockRenewer, blobContainerClient);
}
