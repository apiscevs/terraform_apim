<!-- Normalize path: replace ID-like segments with {id} -->
<set-variable name="rl.path" value="@{
    var p = context.Request.Url.Path.ToLower();

    // strip query
    var q = p.IndexOf('?'); if (q >= 0) p = p.Substring(0, q);

    var parts = p.Split(new[]{'/'}, StringSplitOptions.RemoveEmptyEntries);

    for (int i = 0; i < parts.Length; i++)
    {
        var s = parts[i];

        // digits-only OR GUID -> treat as an ID
        if (System.Text.RegularExpressions.Regex.IsMatch(
                s,
                @"^(?:\d+|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$",
                System.Text.RegularExpressions.RegexOptions.IgnoreCase))
        {
            parts[i] = "{id}";
        }
    }

    return "/" + string.Join("/", parts);
}" />
