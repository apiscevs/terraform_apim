import java.lang.reflect.Field
import org.apache.jmeter.engine.StandardJMeterEngine

// 1) Grab the engine
StandardJMeterEngine engine = ctx.getEngine()

// 2) Reflectively access the private 'groups' field
Field groupsField = StandardJMeterEngine.class.getDeclaredField('groups')
groupsField.setAccessible(true)
List<?> groups = (List<?>)groupsField.get(engine)

// 3) Find the ThreadGroup named exactly "Main TG"
int mainActive = 0
groups.find { tg ->
    tg.getName() == 'Main TG'
}?.with { tg ->
    // Each tg has a 'threadGroup' property of type java.lang.ThreadGroup
    mainActive = tg.threadGroup.activeCount()
}

log.info("▶ Monitor: 'Main TG' active threads = $mainActive")

// 4) If it’s zero, stop the entire test gracefully
if (mainActive == 0) {
    log.info("▶ Monitor: no more Main TG threads – stopping test")
    engine.stopTest(true)
}
