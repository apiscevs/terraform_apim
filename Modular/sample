import java.lang.reflect.Field
import org.apache.jmeter.engine.StandardJMeterEngine

StandardJMeterEngine engine = ctx.getEngine()

// reflection to get the private 'groups' list
Field f = StandardJMeterEngine.class.getDeclaredField('groups')
f.setAccessible(true)
List<?> groups = (List<?>)f.get(engine)

// find your Main TG by its exact name
def mainTG = groups.find { it.getName() == 'Main TG' }
if (!mainTG) {
  log.warn("Monitor: no Thread Group named 'Main TG'")
  return
}

// reflection to grab the low-level ThreadGroup and its activeCount()
Field tgF = mainTG.getClass().getSuperclass().getDeclaredField('threadGroup')
tgF.setAccessible(true)
java.lang.ThreadGroup jtg = (java.lang.ThreadGroup)tgF.get(mainTG)

int alive = jtg.activeCount()
log.info("Monitor: 'Main TG' active threads = " + alive)

if (alive == 0) {
  log.info("Monitor: Main TG is done â€” stopping test")
  engine.stopTest(true)
}
