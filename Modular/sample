public class DuplicateOrderService
{
    private static TimeSpan? _cachedDuration;
    private static readonly SemaphoreSlim _lock = new(1, 1);

    private readonly IRedisCachingProvider _redis;
    private TimeSpan _duration;

    public DuplicateOrderService(IRedisCachingProvider redis)
    {
        _redis = redis;
    }

    public async Task InitializeAsync()
    {
        if (_cachedDuration != null)
        {
            _duration = _cachedDuration.Value;
            return;
        }

        await _lock.WaitAsync();
        try
        {
            if (_cachedDuration == null)
            {
                var value = await _redis.GetAsync<int>("MqDuplicateOrderDurationSeconds");
                _cachedDuration = TimeSpan.FromSeconds(value.Value); // throws if missing
            }

            _duration = _cachedDuration.Value;
        }
        finally
        {
            _lock.Release();
        }
    }

    // Now use _duration safely
}
